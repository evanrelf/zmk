#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE_LAYER 0
#define LEFT_LAYER 1
#define RIGHT_LAYER 2
#define BOTH_LAYER 3

/ {
  keymap {
    compatible = "zmk,keymap";

    // trans_layer {
    //   bindings = <
    //     &trans              &trans              &trans              &trans              &trans                  &trans              &trans              &trans              &trans              &trans
    //     &trans              &trans              &trans              &trans              &trans                  &trans              &trans              &trans              &trans              &trans
    //     &trans              &trans              &trans              &trans              &trans                  &trans              &trans              &trans              &trans              &trans
    //                                                                 &trans              &trans                  &trans              &trans
    //   >;
    // };

    // colemakdh_base_layer {
    //   bindings = <
    //     &kp Q               &kp W               &kp F               &kp P               &kp B                   &kp J               &kp L               &kp U               &kp Y               &kp SEMICOLON
    //     &kp A               &kp R               &kp S               &kp T               &kp G                   &kp M               &kp N               &kp E               &kp I               &kp O
    //     &kp Z               &kp X               &kp C               &kp D               &kp V                   &kp K               &kp H               &kp COMMA           &kp PERIOD          &kp SLASH
    //                                                                 &mo LEFT_LAYER      &trans                  &trans              &mo RIGHT_LAYER
    //   >;
    // };

    base_layer {
      bindings = <
        &kp Q               &kp W               &kp E               &kp R               &kp T                   &kp Y               &kp U               &kp I               &kp O               &kp P
        &kp A               &kp S               &kp D               &kp F               &kp G                   &kp H               &kp J               &kp K               &kp L               &kp SINGLE_QUOTE
        &kp Z               &kp X               &kp C               &kp V               &kp B                   &kp N               &kp M               &kp COMMA           &kp PERIOD          &kp SLASH
                                                                    &mo LEFT_LAYER      &trans                  &trans              &mo RIGHT_LAYER
      >;
    };

    left_layer {
      bindings = <
        &trans              &trans              &trans              &trans              &trans                  &trans              &trans              &trans              &trans              &trans
        &trans              &trans              &trans              &trans              &trans                  &trans              &trans              &trans              &trans              &trans
        &trans              &trans              &trans              &trans              &trans                  &trans              &trans              &trans              &trans              &trans
                                                                    &mo LEFT_LAYER      &trans                  &trans              &mo RIGHT_LAYER
      >;
    };

    right_layer {
      bindings = <
        &trans              &trans              &trans              &trans              &trans                  &trans              &trans              &trans              &trans              &trans
        &trans              &trans              &trans              &trans              &trans                  &trans              &trans              &trans              &trans              &trans
        &trans              &trans              &trans              &trans              &trans                  &trans              &trans              &trans              &trans              &trans
                                                                    &mo LEFT_LAYER      &trans                  &trans              &mo RIGHT_LAYER
      >;
    };

    both_layer {
      bindings = <
        &bt BT_SEL 0        &bt BT_SEL 1        &bt BT_SEL 2        &bt BT_SEL 3        &trans                  &trans              &trans              &trans              &trans              &bt BT_CLR
        &trans              &trans              &trans              &trans              &trans                  &trans              &trans              &trans              &trans              &trans
        &trans              &trans              &trans              &trans              &bootloader             &bootloader         &trans              &trans              &trans              &trans
                                                                    &trans              &trans                  &trans              &trans
      >;
    };
  };

  combos {
    compatible = "zmk,combos";

    combo_tab {
      bindings = <&kp TAB>;
      key-positions = <1 2>;
      layers = <0>;
      timeout-ms = <50>;
    };

    combo_backspace {
      bindings = <&kp BACKSPACE>;
      key-positions = <7 8>;
      layers = <0>;
      timeout-ms = <50>;
    };

    combo_escape {
      bindings = <&kp ESCAPE>;
      key-positions = <11 12>;
      layers = <0>;
      timeout-ms = <50>;
    };

    combo_return {
      bindings = <&kp RETURN>;
      key-positions = <17 18>;
      layers = <0>;
      timeout-ms = <50>;
    };

    combo_left_shift {
      bindings = <&kp LEFT_SHIFT>;
      key-positions = <21 22>;
      layers = <0>;
      timeout-ms = <50>;
    };

    combo_right_shift {
      bindings = <&kp RIGHT_SHIFT>;
      key-positions = <27 28>;
      layers = <0>;
      timeout-ms = <50>;
    };
  };

  conditional_layers {
    compatible = "zmk,conditional-layers";

    both_layer {
      if-layers = <1 2>;
      then-layer = <3>;
    };
  };
};
